{"version":3,"sources":["components/logo.svg","components/LetterTile.js","components/Board.js","utilities.js","store/game.js","components/Game.js","components/App.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","LetterTile","props","style","width","height","border","display","letter","value","points","Board","board","matrix","ret","forEach","cell","push","linearize","this","map","i","key","React","Component","connect","state","dispatch","initialState","letters","A","id","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","powerups","Game","initializeLetters","initializeBoard","className","classname","type","setLetters","Math","floor","String","fromCharCode","random","makeBoard","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reducer","combineReducers","action","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,+JCiB5BC,EAfI,SAAAC,GAQlB,OACC,yBAAKC,MARO,CACZC,MAAM,OACNC,OAAO,OACPC,OAAO,iBACPC,QAAS,iBAKPL,EAAMM,OAAOC,MADf,IACuBP,EAAMM,OAAOE,S,ICNhCC,E,8NAMJ,IAAIC,ECZC,SAAmBC,GACzB,IAAIC,EAAM,GADuB,uBAEjC,IAAI,IAAJ,IAAeD,EAAf,+CAAsB,SACjBE,SAAQ,SAACC,GAAD,OAAUF,EAAIG,KAAKD,OAHC,kFAMjC,OAAOF,EDMMI,CAAUC,KAAKjB,MAAMU,OAEjC,OACC,6BACEA,GAASA,EAAMQ,KAAI,SAACZ,EAAOa,GAC3B,OACC,kBAAC,EAAD,CAAYb,OAAQA,EAAQc,IAAKD,Y,GAZnBE,IAAMC,WA8BXC,eAVS,SAAAC,GACvB,MAAO,CACNd,MAAOc,EAAMd,UAIY,SAAAe,GAC1B,MAAO,KAGOF,CAA6Cd,GEd5D,IAAMiB,EAAe,CACpBC,QAAS,CACPC,EAAG,CAACC,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/BsB,EAAG,CAACD,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/BuB,EAAG,CAACF,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/BwB,EAAG,CAACH,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/ByB,EAAG,CAACJ,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/B0B,EAAG,CAACL,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/B2B,EAAG,CAACN,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/B4B,EAAG,CAACP,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/B6B,EAAG,CAACR,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,GAC/B8B,EAAG,CAACT,GAAI,EAAGtB,MAAO,IAAKC,OAAQ,IAC/B+B,EAAG,CAACV,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCgC,EAAG,CAACX,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCiC,EAAG,CAACZ,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCkC,EAAG,CAACb,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCmC,EAAG,CAACd,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCoC,EAAG,CAACf,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCqC,EAAG,CAAChB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,IAChCsC,EAAG,CAACjB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCuC,EAAG,CAAClB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCwC,EAAG,CAACnB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChCyC,EAAG,CAACpB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChC0C,EAAG,CAACrB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChC2C,EAAG,CAACtB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChC4C,EAAG,CAACvB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChC6C,EAAG,CAACxB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,GAChC8C,EAAG,CAACzB,GAAI,GAAItB,MAAO,IAAKC,OAAQ,KAClCE,MAAO,GACP6C,SAAU,IC9CLC,E,YACL,WAAYxD,GAAQ,IAAD,8BAClB,4CAAMA,KAEDA,MAAMyD,oBAEX,EAAKzD,MAAM0D,gBAAgB,EAAK1D,MAAM2B,SALpB,E,mHAYlB,OACG,yBAAKgC,UAAU,QACZ,wBAAIA,UAAU,SAAd,kBACA,yBAAKA,UAAU,QACb,4CAAc,MACd,yBAAKC,UAAU,eACb,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,kBAEjB,yBAAKA,UAAU,WAGjB,yBAAKD,UAAU,QACb,kBAAC,EAAD,Y,GA1BStC,IAAMC,WAkDVC,eAjBS,SAAAC,GACvB,MAAO,CACNG,QAASH,EAAMG,YAIU,SAAAF,GAC1B,MAAO,CACNgC,kBAAmB,SAAA9B,GAClBF,EDgBuB,SAAAE,GACzB,MAAO,CACNkC,KA9DyB,qBA+DzBlC,WCnBUmC,CAAWnC,KAErB+B,gBAAiB,SAAA/B,GAChBF,EDOK,CACNoC,KAxDkB,cAyDlBnD,MAnDK,SAAmBiB,GAGzB,IAFA,IAAIf,EAAM,GAEFO,EAAI,EAAGA,EAAI,GAAIA,IACnBA,EAAE,IAAM,GAAGP,EAAIG,KAAK,IACvBH,EAAImD,KAAKC,MAAM7C,EAAE,IAAIA,EAAE,GAAKQ,EAAQsC,OAAOC,aAAcH,KAAKC,MAAoB,GAAdD,KAAKI,UAAa,KAGvF,OAAOvD,ECkCewD,CAAUzC,SAKlBJ,CAA6CiC,GCxC7Ca,MARf,WACE,OACE,yBAAKV,UAAU,OACd,kBAAC,EAAD,QCECW,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7D,QACfuD,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,mCCzF3DC,EAAUC,0BAAgB,CAC/BtF,MJoE2B,WAAyC,IAAxCc,EAAuC,uDAA/BE,EAAahB,MAAOuF,EAAW,uCACnE,OAAOA,EAAOpC,MACb,IA5EkB,cA6EjB,OAAOoC,EAAOvF,MACf,QACC,OAAOc,IIxETG,QJ+D4B,WAA2C,IAA1CH,EAAyC,uDAAjCE,EAAaC,QAAoB,iCACtE,OAAOH,KI3DF0E,EAAaC,8BAClBC,0BAAgBC,IAAiBC,uBAAa,CAACC,WAAW,MAK5CC,EAFDC,sBAAYV,EAASG,GCJnCQ,IAASC,OACR,kBAAC,IAAD,CAAUH,MAAOA,GAChB,kBAAC,EAAD,OAEDI,SAASC,eAAe,SFIlB,SAAkB/B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+B,IAAIC,GAAwBvC,OAAOC,SAASuC,MACpDC,SAAWzC,OAAOC,SAASwC,OAIvC,OAGFzC,OAAO0C,iBAAiB,QAAQ,WAC9B,IAAMrC,EAAK,UAAMkC,GAAN,sBAEPzC,IAgEV,SAAiCO,EAAOC,GAEtCqC,MAAMtC,EAAO,CACXuC,QAAS,CAAE,iBAAkB,YAE5BlC,MAAK,SAAAmC,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1C,UAAUC,cAAc0C,MAAMxC,MAAK,SAAAC,GACjCA,EAAawC,aAAazC,MAAK,WAC7BV,OAAOC,SAASmD,eAKpBhD,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAmC,CAAwBhD,EAAOC,GAI/BC,UAAUC,cAAc0C,MAAMxC,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OEzB/BE,K","file":"static/js/main.6037fa69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9549ae36.svg\";","import React from 'react'\n\nconst LetterTile = props => {\n\tlet styles = {\n\t\twidth:'50px',\n\t\theight:'50px',\n\t\tborder:'1px solid #000',\n\t\tdisplay: 'inline-block'\n\t}\n\t// console.log(props);\n\treturn (\n\t\t<div style={styles}>\n\t\t\t{props.letter.value} {props.letter.points}\n\t\t</div>\n\t)\n}\n\nexport default LetterTile","import React from 'react'\nimport {connect} from 'react-redux'\nimport LetterTile from './LetterTile'\nimport {linearize} from '../utilities'\n// import {makeBoard} from '../store/game'\n\nclass Board extends React.Component {\n\tcomponentDidMount() {\n\n\t}\n\n\trender() {\n\t\tlet board = linearize(this.props.board);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{board && board.map((letter,i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<LetterTile letter={letter} key={i}/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tboard: state.board\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n\n","export function linearize(matrix) {\n\tlet ret = [];\n\tfor(let row of matrix){\n\t\trow.forEach((cell) => ret.push(cell))\n\t}\n\n\treturn ret;\n}","// ACTION CREATORS\n\nconst BUILD_BOARD = 'BUILD_BOARD'\nconst INITIALIZE_LETTERS = 'INITIALIZE_LETTERS'\n\n// MAKER FUNCTIONS\n\n// function to make board based off of frequencies in the english language\nexport function makeBoard(letters) {\n\tlet ret = [];\n\n\tfor(let i = 0; i < 16; i++) {\n\t\tif(i%4 === 0) ret.push([]);\n\t\tret[Math.floor(i/4)][i%4] = letters[String.fromCharCode((Math.floor(Math.random()*26)+65))]\n\t}\n\n\treturn ret\n}\n\n\n// INITIAL STATE\n\nconst initialState = {\n\tletters: {\n\t\t\tA: {id: 0, value: 'A', points: 1},\n\t\t\tB: {id: 1, value: 'B', points: 4},\n\t\t\tC: {id: 2, value: 'C', points: 4},\n\t\t\tD: {id: 3, value: 'D', points: 2},\n\t\t\tE: {id: 4, value: 'E', points: 1},\n\t\t\tF: {id: 5, value: 'F', points: 4},\n\t\t\tG: {id: 6, value: 'G', points: 3},\n\t\t\tH: {id: 7, value: 'H', points: 3},\n\t\t\tI: {id: 8, value: 'I', points: 1},\n\t\t\tJ: {id: 9, value: 'J', points: 10},\n\t\t\tK: {id: 10, value: 'K', points: 5},\n\t\t\tL: {id: 11, value: 'L', points: 3},\n\t\t\tM: {id: 12, value: 'M', points: 4},\n\t\t\tN: {id: 13, value: 'N', points: 2},\n\t\t\tO: {id: 14, value: 'O', points: 1},\n\t\t\tP: {id: 15, value: 'P', points: 4},\n\t\t\tQ: {id: 16, value: 'Q', points: 10},\n\t\t\tR: {id: 17, value: 'R', points: 1},\n\t\t\tS: {id: 18, value: 'S', points: 1},\n\t\t\tT: {id: 19, value: 'T', points: 1},\n\t\t\tU: {id: 20, value: 'U', points: 2},\n\t\t\tV: {id: 21, value: 'V', points: 5},\n\t\t\tW: {id: 22, value: 'W', points: 4},\n\t\t\tX: {id: 23, value: 'X', points: 1},\n\t\t\tY: {id: 24, value: 'Y', points: 1},\n\t\t\tZ: {id: 25, value: 'Z', points: 10}},\n\tboard: {},\n\tpowerups: []\n}\n\n// ACTION CREATORS\n\nexport const buildBoard = board => {\n\treturn {\n\t\ttype: BUILD_BOARD,\n\t\tboard\n\t}\n}\n\nexport const setLetters = letters => {\n\treturn {\n\t\ttype: INITIALIZE_LETTERS,\n\t\tletters\n\t}\n}\n\n// REDUCERS\n\nexport const letterReducer = (state = initialState.letters, action) => {\n\treturn state\n}\n\nexport const boardReducer = (state = initialState.board, action) => {\n\tswitch(action.type) {\n\t\tcase BUILD_BOARD:\n\t\t\treturn action.board\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport Board from './Board'\nimport {makeBoard, buildBoard, setLetters} from '../store/game'\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.props.initializeLetters();\n\n\t\tthis.props.initializeBoard(this.props.letters);\n\t}\n\n\tcomponentDidMount() {\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t  <div className=\"game\">\n        <h1 className=\"title\">Battle Boggle!</h1>\n        <div className=\"head\">\n          <div>{`Round${\"#\"}`}</div>\n          <div classname=\"playerScore\">\n            <div classname=\"player1Score\"></div>\n            <div classname=\"player2Score\"></div>\n          </div>\n          <div classname=\"timer\">\n          </div>\n        </div>\n        <div className=\"body\">\n          <Board />\n        </div>\n      </div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tletters: state.letters\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tinitializeLetters: letters => {\n\t\t\tdispatch(setLetters(letters))\n\t\t},\n\t\tinitializeBoard: letters => {\n\t\t\tdispatch(buildBoard(makeBoard(letters)))\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// for testing\nimport Game from './Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \t<Game />\n    </div>\n  );\n}\n\nexport default App;\n\n// <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {createLogger} from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {boardReducer as board, letterReducer as letters} from './game'\n\n// combine reducers here\nconst reducer = combineReducers({\n\tboard,\n\tletters\n})\n\n// include middlewares\n\nconst middleware = composeWithDevTools(\n\tapplyMiddleware(thunkMiddleware, createLogger({collapsed: true}))\n)\n\nconst store = createStore(reducer, middleware)\n\nexport default store\n\n// data we'll need\n// p1score\n// p2score\n// currently selected letters\n// current board\n// dictionary\n// letter score values and probabilities\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\n\n// ReactDOM.render(\n// \t\t<App />,\n// \tdocument.getElementById('root')\n// );\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}